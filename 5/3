import RPi.GPIO as GPIO
import sys
from time import sleep

GPIO.setmode(GPIO.BCM)
dac = [26, 19, 13, 6, 5, 11, 9, 10]
leds = [21, 20, 16, 12, 7, 8, 25, 24]
comp = 4
troyka = 17
GPIO.setup(dac, GPIO.OUT)
GPIO.setup(leds, GPIO.OUT)
GPIO.setup(troyka, GPIO.OUT, initial = GPIO.HIGH)
GPIO.setup(comp, GPIO.IN)

def binar(a):
    return [int(el) for el in bin(a)[2:].zfill(8)]

def adc():
    k = 0
    for i in range(7, -1, -1):
        k += 2 ** i
        GPIO.output(dac, binar(k))
        sleep(0.01)
        if GPIO.input(comp) == 0:
            k -= 2 ** i
    return k

def func(k, n):
    x = round(k / n * 8)
    ans = [0 for i in range(8)]
    for i in range(x):
        ans[i] = 1
    return ans

try:
    while True:
        k = adc()
        if k != 0:
            GPIO.output(leds, func(k, 65))
            print(k, '{:.2f}v'.format(3.3 * k / 256))

finally:
    GPIO.output(dac, 0)
    GPIO.cleanup()
